# -*- coding:utf-8 -*-

"""
    PyTorch 模型转 npz 文件
"""

import torch
import numpy as np

from modeling.deeplab import DeepLab

classes_num = 32
input_height = 448
input_width = 448
pth_file = "../../../PyTorch/run/camvid/deeplab-resnet/model_best.pth.tar"
para_file = "./para.npz"

device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")


def main():
    print('cuda device count: ', torch.cuda.device_count())

    net = DeepLab(backbone="resnet", output_stride=16, num_classes=classes_num, sync_bn=False)
    ckpt = torch.load(pth_file, map_location='cpu')
    net.load_state_dict(ckpt["state_dict"])
    net.to(device)
    net.eval()
    print('model: ', net)
    tmp = torch.ones(1, 3, input_height, input_width).to(device)
    print('input: ', tmp)
    out = net(tmp)
    print('output:', out)

    para = {}  # save weight as npz file
    for k, v in net.state_dict().items():
        para[k] = v.cpu().numpy()
        print("Key: ", k, "Value: ", v.shape, " To numpy shape: ", v.cpu().numpy().shape)
    np.savez(para_file, **para)


if __name__ == '__main__':
    main()

"""
Key:  backbone.conv1.weight Value:  torch.Size([64, 3, 7, 7])  To numpy shape:  (64, 3, 7, 7)
Key:  backbone.bn1.weight Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.bn1.bias Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.bn1.running_mean Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.bn1.running_var Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.0.conv1.weight Value:  torch.Size([64, 64, 1, 1])  To numpy shape:  (64, 64, 1, 1)
Key:  backbone.layer1.0.bn1.weight Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.0.bn1.bias Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.0.bn1.running_mean Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.0.bn1.running_var Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.0.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.0.conv2.weight Value:  torch.Size([64, 64, 3, 3])  To numpy shape:  (64, 64, 3, 3)
Key:  backbone.layer1.0.bn2.weight Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.0.bn2.bias Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.0.bn2.running_mean Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.0.bn2.running_var Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.0.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.0.conv3.weight Value:  torch.Size([256, 64, 1, 1])  To numpy shape:  (256, 64, 1, 1)
Key:  backbone.layer1.0.bn3.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.0.bn3.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.0.bn3.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.0.bn3.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.0.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.0.downsample.0.weight Value:  torch.Size([256, 64, 1, 1])  To numpy shape:  (256, 64, 1, 1)
Key:  backbone.layer1.0.downsample.1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.0.downsample.1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.0.downsample.1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.0.downsample.1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.0.downsample.1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.1.conv1.weight Value:  torch.Size([64, 256, 1, 1])  To numpy shape:  (64, 256, 1, 1)
Key:  backbone.layer1.1.bn1.weight Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.1.bn1.bias Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.1.bn1.running_mean Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.1.bn1.running_var Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.1.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.1.conv2.weight Value:  torch.Size([64, 64, 3, 3])  To numpy shape:  (64, 64, 3, 3)
Key:  backbone.layer1.1.bn2.weight Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.1.bn2.bias Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.1.bn2.running_mean Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.1.bn2.running_var Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.1.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.1.conv3.weight Value:  torch.Size([256, 64, 1, 1])  To numpy shape:  (256, 64, 1, 1)
Key:  backbone.layer1.1.bn3.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.1.bn3.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.1.bn3.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.1.bn3.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.1.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.2.conv1.weight Value:  torch.Size([64, 256, 1, 1])  To numpy shape:  (64, 256, 1, 1)
Key:  backbone.layer1.2.bn1.weight Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.2.bn1.bias Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.2.bn1.running_mean Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.2.bn1.running_var Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.2.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.2.conv2.weight Value:  torch.Size([64, 64, 3, 3])  To numpy shape:  (64, 64, 3, 3)
Key:  backbone.layer1.2.bn2.weight Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.2.bn2.bias Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.2.bn2.running_mean Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.2.bn2.running_var Value:  torch.Size([64])  To numpy shape:  (64,)
Key:  backbone.layer1.2.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer1.2.conv3.weight Value:  torch.Size([256, 64, 1, 1])  To numpy shape:  (256, 64, 1, 1)
Key:  backbone.layer1.2.bn3.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.2.bn3.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.2.bn3.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.2.bn3.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer1.2.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.0.conv1.weight Value:  torch.Size([128, 256, 1, 1])  To numpy shape:  (128, 256, 1, 1)
Key:  backbone.layer2.0.bn1.weight Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.0.bn1.bias Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.0.bn1.running_mean Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.0.bn1.running_var Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.0.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.0.conv2.weight Value:  torch.Size([128, 128, 3, 3])  To numpy shape:  (128, 128, 3, 3)
Key:  backbone.layer2.0.bn2.weight Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.0.bn2.bias Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.0.bn2.running_mean Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.0.bn2.running_var Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.0.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.0.conv3.weight Value:  torch.Size([512, 128, 1, 1])  To numpy shape:  (512, 128, 1, 1)
Key:  backbone.layer2.0.bn3.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.0.bn3.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.0.bn3.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.0.bn3.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.0.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.0.downsample.0.weight Value:  torch.Size([512, 256, 1, 1])  To numpy shape:  (512, 256, 1, 1)
Key:  backbone.layer2.0.downsample.1.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.0.downsample.1.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.0.downsample.1.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.0.downsample.1.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.0.downsample.1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.1.conv1.weight Value:  torch.Size([128, 512, 1, 1])  To numpy shape:  (128, 512, 1, 1)
Key:  backbone.layer2.1.bn1.weight Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.1.bn1.bias Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.1.bn1.running_mean Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.1.bn1.running_var Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.1.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.1.conv2.weight Value:  torch.Size([128, 128, 3, 3])  To numpy shape:  (128, 128, 3, 3)
Key:  backbone.layer2.1.bn2.weight Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.1.bn2.bias Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.1.bn2.running_mean Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.1.bn2.running_var Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.1.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.1.conv3.weight Value:  torch.Size([512, 128, 1, 1])  To numpy shape:  (512, 128, 1, 1)
Key:  backbone.layer2.1.bn3.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.1.bn3.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.1.bn3.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.1.bn3.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.1.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.2.conv1.weight Value:  torch.Size([128, 512, 1, 1])  To numpy shape:  (128, 512, 1, 1)
Key:  backbone.layer2.2.bn1.weight Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.2.bn1.bias Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.2.bn1.running_mean Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.2.bn1.running_var Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.2.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.2.conv2.weight Value:  torch.Size([128, 128, 3, 3])  To numpy shape:  (128, 128, 3, 3)
Key:  backbone.layer2.2.bn2.weight Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.2.bn2.bias Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.2.bn2.running_mean Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.2.bn2.running_var Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.2.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.2.conv3.weight Value:  torch.Size([512, 128, 1, 1])  To numpy shape:  (512, 128, 1, 1)
Key:  backbone.layer2.2.bn3.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.2.bn3.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.2.bn3.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.2.bn3.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.2.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.3.conv1.weight Value:  torch.Size([128, 512, 1, 1])  To numpy shape:  (128, 512, 1, 1)
Key:  backbone.layer2.3.bn1.weight Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.3.bn1.bias Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.3.bn1.running_mean Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.3.bn1.running_var Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.3.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.3.conv2.weight Value:  torch.Size([128, 128, 3, 3])  To numpy shape:  (128, 128, 3, 3)
Key:  backbone.layer2.3.bn2.weight Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.3.bn2.bias Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.3.bn2.running_mean Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.3.bn2.running_var Value:  torch.Size([128])  To numpy shape:  (128,)
Key:  backbone.layer2.3.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer2.3.conv3.weight Value:  torch.Size([512, 128, 1, 1])  To numpy shape:  (512, 128, 1, 1)
Key:  backbone.layer2.3.bn3.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.3.bn3.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.3.bn3.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.3.bn3.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer2.3.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.0.conv1.weight Value:  torch.Size([256, 512, 1, 1])  To numpy shape:  (256, 512, 1, 1)
Key:  backbone.layer3.0.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.0.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.0.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.0.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.0.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.0.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.0.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.0.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.0.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.0.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.0.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.0.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.0.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.0.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.0.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.0.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.0.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.0.downsample.0.weight Value:  torch.Size([1024, 512, 1, 1])  To numpy shape:  (1024, 512, 1, 1)
Key:  backbone.layer3.0.downsample.1.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.0.downsample.1.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.0.downsample.1.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.0.downsample.1.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.0.downsample.1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.1.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.1.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.1.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.1.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.1.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.1.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.1.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.1.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.1.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.1.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.1.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.1.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.1.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.1.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.1.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.1.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.1.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.1.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.2.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.2.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.2.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.2.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.2.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.2.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.2.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.2.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.2.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.2.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.2.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.2.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.2.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.2.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.2.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.2.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.2.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.2.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.3.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.3.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.3.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.3.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.3.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.3.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.3.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.3.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.3.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.3.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.3.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.3.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.3.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.3.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.3.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.3.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.3.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.3.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.4.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.4.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.4.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.4.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.4.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.4.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.4.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.4.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.4.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.4.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.4.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.4.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.4.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.4.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.4.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.4.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.4.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.4.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.5.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.5.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.5.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.5.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.5.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.5.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.5.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.5.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.5.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.5.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.5.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.5.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.5.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.5.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.5.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.5.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.5.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.5.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.6.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.6.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.6.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.6.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.6.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.6.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.6.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.6.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.6.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.6.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.6.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.6.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.6.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.6.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.6.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.6.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.6.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.6.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.7.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.7.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.7.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.7.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.7.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.7.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.7.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.7.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.7.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.7.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.7.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.7.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.7.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.7.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.7.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.7.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.7.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.7.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.8.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.8.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.8.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.8.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.8.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.8.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.8.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.8.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.8.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.8.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.8.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.8.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.8.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.8.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.8.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.8.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.8.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.8.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.9.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.9.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.9.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.9.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.9.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.9.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.9.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.9.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.9.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.9.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.9.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.9.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.9.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.9.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.9.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.9.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.9.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.9.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.10.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.10.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.10.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.10.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.10.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.10.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.10.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.10.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.10.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.10.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.10.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.10.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.10.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.10.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.10.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.10.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.10.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.10.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.11.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.11.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.11.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.11.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.11.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.11.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.11.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.11.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.11.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.11.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.11.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.11.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.11.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.11.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.11.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.11.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.11.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.11.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.12.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.12.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.12.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.12.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.12.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.12.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.12.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.12.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.12.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.12.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.12.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.12.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.12.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.12.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.12.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.12.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.12.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.12.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.13.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.13.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.13.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.13.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.13.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.13.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.13.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.13.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.13.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.13.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.13.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.13.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.13.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.13.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.13.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.13.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.13.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.13.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.14.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.14.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.14.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.14.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.14.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.14.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.14.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.14.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.14.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.14.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.14.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.14.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.14.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.14.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.14.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.14.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.14.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.14.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.15.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.15.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.15.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.15.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.15.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.15.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.15.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.15.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.15.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.15.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.15.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.15.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.15.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.15.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.15.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.15.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.15.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.15.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.16.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.16.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.16.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.16.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.16.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.16.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.16.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.16.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.16.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.16.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.16.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.16.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.16.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.16.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.16.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.16.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.16.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.16.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.17.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.17.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.17.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.17.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.17.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.17.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.17.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.17.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.17.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.17.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.17.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.17.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.17.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.17.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.17.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.17.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.17.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.17.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.18.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.18.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.18.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.18.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.18.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.18.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.18.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.18.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.18.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.18.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.18.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.18.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.18.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.18.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.18.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.18.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.18.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.18.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.19.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.19.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.19.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.19.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.19.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.19.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.19.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.19.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.19.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.19.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.19.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.19.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.19.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.19.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.19.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.19.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.19.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.19.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.20.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.20.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.20.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.20.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.20.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.20.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.20.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.20.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.20.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.20.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.20.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.20.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.20.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.20.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.20.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.20.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.20.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.20.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.21.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.21.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.21.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.21.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.21.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.21.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.21.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.21.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.21.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.21.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.21.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.21.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.21.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.21.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.21.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.21.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.21.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.21.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.22.conv1.weight Value:  torch.Size([256, 1024, 1, 1])  To numpy shape:  (256, 1024, 1, 1)
Key:  backbone.layer3.22.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.22.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.22.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.22.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.22.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.22.conv2.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  backbone.layer3.22.bn2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.22.bn2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.22.bn2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.22.bn2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  backbone.layer3.22.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer3.22.conv3.weight Value:  torch.Size([1024, 256, 1, 1])  To numpy shape:  (1024, 256, 1, 1)
Key:  backbone.layer3.22.bn3.weight Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.22.bn3.bias Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.22.bn3.running_mean Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.22.bn3.running_var Value:  torch.Size([1024])  To numpy shape:  (1024,)
Key:  backbone.layer3.22.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.0.conv1.weight Value:  torch.Size([512, 1024, 1, 1])  To numpy shape:  (512, 1024, 1, 1)
Key:  backbone.layer4.0.bn1.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.0.bn1.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.0.bn1.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.0.bn1.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.0.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.0.conv2.weight Value:  torch.Size([512, 512, 3, 3])  To numpy shape:  (512, 512, 3, 3)
Key:  backbone.layer4.0.bn2.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.0.bn2.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.0.bn2.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.0.bn2.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.0.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.0.conv3.weight Value:  torch.Size([2048, 512, 1, 1])  To numpy shape:  (2048, 512, 1, 1)
Key:  backbone.layer4.0.bn3.weight Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.0.bn3.bias Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.0.bn3.running_mean Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.0.bn3.running_var Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.0.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.0.downsample.0.weight Value:  torch.Size([2048, 1024, 1, 1])  To numpy shape:  (2048, 1024, 1, 1)
Key:  backbone.layer4.0.downsample.1.weight Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.0.downsample.1.bias Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.0.downsample.1.running_mean Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.0.downsample.1.running_var Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.0.downsample.1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.1.conv1.weight Value:  torch.Size([512, 2048, 1, 1])  To numpy shape:  (512, 2048, 1, 1)
Key:  backbone.layer4.1.bn1.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.1.bn1.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.1.bn1.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.1.bn1.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.1.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.1.conv2.weight Value:  torch.Size([512, 512, 3, 3])  To numpy shape:  (512, 512, 3, 3)
Key:  backbone.layer4.1.bn2.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.1.bn2.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.1.bn2.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.1.bn2.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.1.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.1.conv3.weight Value:  torch.Size([2048, 512, 1, 1])  To numpy shape:  (2048, 512, 1, 1)
Key:  backbone.layer4.1.bn3.weight Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.1.bn3.bias Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.1.bn3.running_mean Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.1.bn3.running_var Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.1.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.2.conv1.weight Value:  torch.Size([512, 2048, 1, 1])  To numpy shape:  (512, 2048, 1, 1)
Key:  backbone.layer4.2.bn1.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.2.bn1.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.2.bn1.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.2.bn1.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.2.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.2.conv2.weight Value:  torch.Size([512, 512, 3, 3])  To numpy shape:  (512, 512, 3, 3)
Key:  backbone.layer4.2.bn2.weight Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.2.bn2.bias Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.2.bn2.running_mean Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.2.bn2.running_var Value:  torch.Size([512])  To numpy shape:  (512,)
Key:  backbone.layer4.2.bn2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  backbone.layer4.2.conv3.weight Value:  torch.Size([2048, 512, 1, 1])  To numpy shape:  (2048, 512, 1, 1)
Key:  backbone.layer4.2.bn3.weight Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.2.bn3.bias Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.2.bn3.running_mean Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.2.bn3.running_var Value:  torch.Size([2048])  To numpy shape:  (2048,)
Key:  backbone.layer4.2.bn3.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  aspp.aspp1.atrous_conv.weight Value:  torch.Size([256, 2048, 1, 1])  To numpy shape:  (256, 2048, 1, 1)
Key:  aspp.aspp1.bn.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp1.bn.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp1.bn.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp1.bn.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp1.bn.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  aspp.aspp2.atrous_conv.weight Value:  torch.Size([256, 2048, 3, 3])  To numpy shape:  (256, 2048, 3, 3)
Key:  aspp.aspp2.bn.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp2.bn.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp2.bn.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp2.bn.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp2.bn.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  aspp.aspp3.atrous_conv.weight Value:  torch.Size([256, 2048, 3, 3])  To numpy shape:  (256, 2048, 3, 3)
Key:  aspp.aspp3.bn.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp3.bn.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp3.bn.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp3.bn.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp3.bn.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  aspp.aspp4.atrous_conv.weight Value:  torch.Size([256, 2048, 3, 3])  To numpy shape:  (256, 2048, 3, 3)
Key:  aspp.aspp4.bn.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp4.bn.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp4.bn.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp4.bn.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.aspp4.bn.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  aspp.global_avg_pool.1.weight Value:  torch.Size([256, 2048, 1, 1])  To numpy shape:  (256, 2048, 1, 1)
Key:  aspp.global_avg_pool.2.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.global_avg_pool.2.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.global_avg_pool.2.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.global_avg_pool.2.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.global_avg_pool.2.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  aspp.conv1.weight Value:  torch.Size([256, 1280, 1, 1])  To numpy shape:  (256, 1280, 1, 1)
Key:  aspp.bn1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.bn1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.bn1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.bn1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  aspp.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  decoder.conv1.weight Value:  torch.Size([48, 256, 1, 1])  To numpy shape:  (48, 256, 1, 1)
Key:  decoder.bn1.weight Value:  torch.Size([48])  To numpy shape:  (48,)
Key:  decoder.bn1.bias Value:  torch.Size([48])  To numpy shape:  (48,)
Key:  decoder.bn1.running_mean Value:  torch.Size([48])  To numpy shape:  (48,)
Key:  decoder.bn1.running_var Value:  torch.Size([48])  To numpy shape:  (48,)
Key:  decoder.bn1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  decoder.last_conv.0.weight Value:  torch.Size([256, 304, 3, 3])  To numpy shape:  (256, 304, 3, 3)
Key:  decoder.last_conv.1.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  decoder.last_conv.1.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  decoder.last_conv.1.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  decoder.last_conv.1.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  decoder.last_conv.1.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  decoder.last_conv.4.weight Value:  torch.Size([256, 256, 3, 3])  To numpy shape:  (256, 256, 3, 3)
Key:  decoder.last_conv.5.weight Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  decoder.last_conv.5.bias Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  decoder.last_conv.5.running_mean Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  decoder.last_conv.5.running_var Value:  torch.Size([256])  To numpy shape:  (256,)
Key:  decoder.last_conv.5.num_batches_tracked Value:  torch.Size([])  To numpy shape:  ()
Key:  decoder.last_conv.8.weight Value:  torch.Size([32, 256, 1, 1])  To numpy shape:  (32, 256, 1, 1)
Key:  decoder.last_conv.8.bias Value:  torch.Size([32])  To numpy shape:  (32,)
"""
